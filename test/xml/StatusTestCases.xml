<!--
(c) 2022 Copyright, Real-Time Innovations.  All rights reserved.
No duplications, whole or partial, manual or electronic, may be made
without express written permission.  Any such copies, or revisions thereof,
must display this notice unaltered.
This code contains trade secrets of Real-Time Innovations, Inc.
-->

<!-- Tests secenarios for Status updates -->
<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://community.rti.com/schema/current/rti_dds_profiles.xsd">
	<qos_library name="TestQos">
		<participant_qos name="Default">
			<database>
				<shutdown_cleanup_period>
					<sec>0</sec>
					<nanosec>100</nanosec>
				</shutdown_cleanup_period>
			</database>
			<entity_factory>
				<autoenable_created_entities>false</autoenable_created_entities>
			</entity_factory>
			<discovery>
				<accept_unknown_peers>false</accept_unknown_peers>
				<multicast_receive_addresses />
				<initial_peers>
					<element>shmem://</element>
				</initial_peers>
			</discovery>
		</participant_qos>
	</qos_library>

	<types>
		<struct name="Foo">
			<member name="foo" type="long" key="true" />
			<member name="bar" type="long" />
		</struct>
	</types>

	<domain_library name="Domains">
		<domain name="DefaultDomain" domain_id="0">
			<register_type name="Foo" type_ref="Foo" />
			<topic name="TestTopic" register_type_ref="Foo" />
		</domain>
	</domain_library>

	<!-- Participant library -->
	<domain_participant_library name="StatusTests">
		<!-- Participants using DynamicData -->
		<domain_participant name="Default" domain_ref="Domains::DefaultDomain">
			<participant_qos base_name="TestQos::Default" />

			<!-- Use the implicit publisher -->
			<data_writer name="Writer" topic_ref="TestTopic">
				<datawriter_qos base_name="BuiltinQosLib::Generic.StrictReliable"></datawriter_qos>
			</data_writer>

			<data_reader name="Reader" topic_ref="TestTopic">
				<datareader_qos base_name="BuiltinQosLib::Generic.StrictReliable"></datareader_qos>
			</data_reader>
		</domain_participant>

		<domain_participant name="IncompatibleQos" domain_ref="Domains::DefaultDomain">
			<participant_qos base_name="TestQos::Default" />

			<!-- Use the implicit publisher -->
			<data_writer name="Writer" topic_ref="TestTopic">
				<datawriter_qos>
					<durability>
						<kind>VOLATILE_DURABILITY_QOS</kind>
					</durability>
				</datawriter_qos>
			</data_writer>

			<data_reader name="Reader" topic_ref="TestTopic">
				<datareader_qos>
					<durability>
						<kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
					</durability>
				</datareader_qos>
			</data_reader>
		</domain_participant>

		<domain_participant name="LivelinessLost" domain_ref="Domains::DefaultDomain">
			<participant_qos base_name="TestQos::Default" />

			<!-- Use the implicit publisher -->
			<data_writer name="Writer" topic_ref="TestTopic">
				<datawriter_qos base_name="BuiltinQosLib::Generic.StrictReliable">
					<liveliness>
						<kind>MANUAL_BY_TOPIC_LIVELINESS_QOS</kind>
						<lease_duration>
							<sec>0</sec>
							<nanosec>100000</nanosec>
						</lease_duration>
						<assertions_per_lease_duration>2</assertions_per_lease_duration>
					</liveliness>
				</datawriter_qos>
			</data_writer>

			<data_reader name="Reader" topic_ref="TestTopic">
				<datareader_qos base_name="BuiltinQosLib::Generic.StrictReliable">
					<liveliness>
						<kind>MANUAL_BY_TOPIC_LIVELINESS_QOS</kind>
						<lease_duration>
							<sec>0</sec>
							<nanosec>100000</nanosec>
						</lease_duration>
						<assertions_per_lease_duration>2</assertions_per_lease_duration>
					</liveliness>
				</datareader_qos>
			</data_reader>
		</domain_participant>

		<domain_participant name="DeadlineMissed" domain_ref="Domains::DefaultDomain">
			<participant_qos base_name="TestQos::Default" />

			<!-- Use the implicit publisher -->
			<data_writer name="Writer" topic_ref="TestTopic">
				<datawriter_qos base_name="BuiltinQosLib::Generic.StrictReliable">
					<deadline>
						<period>
							<sec>1</sec>
							<nanosec>0</nanosec>
						</period>
					</deadline>
				</datawriter_qos>
			</data_writer>

			<data_reader name="Reader" topic_ref="TestTopic">
				<datareader_qos base_name="BuiltinQosLib::Generic.StrictReliable">
					<deadline>
						<period>
							<sec>1</sec>
							<nanosec>0</nanosec>
						</period>
					</deadline>
				</datareader_qos>
			</data_reader>
		</domain_participant>

		<domain_participant name="SampleLost" domain_ref="Domains::DefaultDomain">
			<participant_qos base_name="TestQos::Default" />

			<!-- Use the implicit publisher -->
			<data_writer name="Writer" topic_ref="TestTopic">
				<datawriter_qos base_name="BuiltinQosLib::Generic.StrictReliable">
					<reliability>
						<kind>BEST_EFFORT_RELIABILITY_QOS</kind>
					</reliability>
				</datawriter_qos>
			</data_writer>

			<data_reader name="Reader" topic_ref="TestTopic">
				<datareader_qos base_name="BuiltinQosLib::Generic.StrictReliable">
					<resource_limits>
						<initial_samples>1</initial_samples>
						<initial_instances>1</initial_instances>
						<max_samples>1</max_samples>
					</resource_limits>
					<reliability>
						<kind>BEST_EFFORT_RELIABILITY_QOS</kind>
					</reliability>
				</datareader_qos>
			</data_reader>
		</domain_participant>

		<domain_participant name="SampleRejected" domain_ref="Domains::DefaultDomain">
			<participant_qos base_name="TestQos::Default" />

			<!-- Use the implicit publisher -->
			<data_writer name="Writer" topic_ref="TestTopic">
				<datawriter_qos base_name="BuiltinQosLib::Generic.StrictReliable"></datawriter_qos>
			</data_writer>

			<data_reader name="Reader" topic_ref="TestTopic">
				<datareader_qos base_name="BuiltinQosLib::Generic.StrictReliable">
					<resource_limits>
						<initial_samples>1</initial_samples>
						<initial_instances>1</initial_instances>
						<max_samples_per_instance>1</max_samples_per_instance>
					</resource_limits>
				</datareader_qos>
			</data_reader>
		</domain_participant>

		<domain_participant name="ReliableReaderActivityChanged" domain_ref="Domains::DefaultDomain">
			<participant_qos base_name="TestQos::Default" />

			<!-- Use the implicit publisher -->
			<data_writer name="Writer" topic_ref="TestTopic">
				<datawriter_qos base_name="BuiltinQosLib::Generic.StrictReliable">
					<durability>
						<kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
					</durability>
					<protocol>
						<rtps_reliable_writer>
							<heartbeats_per_max_samples>0</heartbeats_per_max_samples>
							<max_heartbeat_retries>5</max_heartbeat_retries>
							<heartbeat_period>
								<sec>0</sec>
								<nanosec>100000000</nanosec>
							</heartbeat_period>
							<fast_heartbeat_period>
								<sec>0</sec>
								<nanosec>100000000</nanosec>
							</fast_heartbeat_period>
							<late_joiner_heartbeat_period>
								<sec>0</sec>
								<nanosec>100000000</nanosec>
							</late_joiner_heartbeat_period>
						</rtps_reliable_writer>
					</protocol>
				</datawriter_qos>
			</data_writer>

			<data_reader name="Reader" topic_ref="TestTopic">
				<datareader_qos base_name="BuiltinQosLib::Generic.StrictReliable">
					<durability>
						<kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
					</durability>
				</datareader_qos>
			</data_reader>
		</domain_participant>

		<domain_participant name="ReliableWriterCacheChanged" domain_ref="Domains::DefaultDomain">
			<participant_qos base_name="TestQos::Default" />

			<!-- Use the implicit publisher -->
			<data_writer name="Writer" topic_ref="TestTopic">
				<datawriter_qos base_name="BuiltinQosLib::Generic.StrictReliable">
					<protocol>
						<rtps_reliable_writer>
							<heartbeats_per_max_samples>0</heartbeats_per_max_samples>
							<max_heartbeat_retries>1</max_heartbeat_retries>
							<heartbeat_period>
								<sec>0</sec>
								<nanosec>10000000</nanosec>
							</heartbeat_period>
							<fast_heartbeat_period>
								<sec>0</sec>
								<nanosec>10000000</nanosec>
							</fast_heartbeat_period>
							<late_joiner_heartbeat_period>
								<sec>0</sec>
								<nanosec>10000000</nanosec>
							</late_joiner_heartbeat_period>
						</rtps_reliable_writer>
					</protocol>
					<durability>
						<kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
					</durability>
				</datawriter_qos>
			</data_writer>

			<data_reader name="Reader" topic_ref="TestTopic">
				<datareader_qos base_name="BuiltinQosLib::Generic.StrictReliable">
					<protocol>
						<disable_positive_acks>true</disable_positive_acks>
						<rtps_reliable_reader>
							<min_heartbeat_response_delay>
								<sec>100</sec>
								<nanosec>0</nanosec>
							</min_heartbeat_response_delay>
							<max_heartbeat_response_delay>
								<sec>1000</sec>
								<nanosec>0</nanosec>
							</max_heartbeat_response_delay>
						</rtps_reliable_reader>
					</protocol>
					<durability>
						<kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
					</durability>
				</datareader_qos>
			</data_reader>
		</domain_participant>

		<domain_participant name="InstanceReplaced" domain_ref="Domains::DefaultDomain">
			<participant_qos base_name="TestQos::Default" />

			<!-- Use the implicit publisher -->
			<data_writer name="Writer" topic_ref="TestTopic">
				<datawriter_qos base_name="BuiltinQosLib::Generic.StrictReliable">
					<reliability>
						<kind>RELIABLE_RELIABILITY_QOS</kind>
						<max_blocking_time>
							<sec>1</sec>
							<nanosec>0</nanosec>
						</max_blocking_time>
					</reliability>
					<durability>
						<kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
					</durability>
					<history>
						<kind>KEEP_ALL_HISTORY_QOS</kind>
					</history>
					<writer_resource_limits>
						<instance_replacement>DISPOSED_INSTANCE_REPLACEMENT</instance_replacement>
					</writer_resource_limits>
					<resource_limits>
						<max_instances>1</max_instances>
						<initial_instances>1</initial_instances>
					</resource_limits>
				</datawriter_qos>
			</data_writer>

			<data_reader name="Reader" topic_ref="TestTopic">
				<datareader_qos base_name="BuiltinQosLib::Generic.StrictReliable">
					<reliability>
						<kind>RELIABLE_RELIABILITY_QOS</kind>
					</reliability>
					<durability>
						<kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
					</durability>
					<history>
						<kind>KEEP_ALL_HISTORY_QOS</kind>
					</history>
					<resource_limits>
						<max_samples>2</max_samples>
						<max_samples_per_instance>2</max_samples_per_instance>
						<initial_samples>2</initial_samples>
					</resource_limits>
				</datareader_qos>
			</data_reader>
		</domain_participant>

		<domain_participant name="SampleRemoved" domain_ref="Domains::DefaultDomain">
			<participant_qos base_name="TestQos::Default" />

			<!-- Use the implicit publisher -->
			<data_writer name="Writer" topic_ref="TestTopic">
				<datawriter_qos base_name="BuiltinQosLib::Generic.StrictReliable">
					<reliability>
						<kind>RELIABLE_RELIABILITY_QOS</kind>
					</reliability>
				</datawriter_qos>
			</data_writer>

			<data_reader name="Reader" topic_ref="TestTopic">
				<datareader_qos base_name="BuiltinQosLib::Generic.StrictReliable">
					<reliability>
						<kind>RELIABLE_RELIABILITY_QOS</kind>
					</reliability>
				</datareader_qos>
			</data_reader>
		</domain_participant>
	</domain_participant_library>
</dds>